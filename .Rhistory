a
num<-1:100
num<-1:100:2
num<-1:100,2
num<-1:100
num2 <-c(100:300,400:500)
num3 <- seq(100,200,by=2)
num3
num4<-seq(100,1,by=-2)
num4
help(rep)
rep(1:4,2)
rep(1:4,c(2,3,4,5))
rep(1:4,each(2))
rep(1:4,each=2)
rep(1:5,c(2,3,4,5))
rep(1:5,c(2,3,4,5,6))
rep(TRUE,20)
#백터 이름 지정하기
score <- c(90,85,70)
score
name(score)
name(score)<-c('j','q','h')
names(score)<-c('j','q','h')
names
names(score)
score
# 부분출력
score[1]
# 부분출력
score[0]
# 부분출력
score[3]
# 부분출력
score[j]
# 부분출력
score['j']
score[2]
names[1]
score[90]
score[2:3]
score[c('j','h')]
x<-c(10:15)
y<-20:25
x+y
v1[c(1,5)] <-c(10,20)
v1<-[c(1,5)] <-c(10,20)
d<-1:10
sum(d)
mean(d)
length(d)
max(d)
min(d)
sort(d)
)
sort(d,decreasing = T)
d<-1:9
d[d>5]
d[d>5 &d<8]
d<- 100:200
d[10]
d[:10}
d[1:10}
d[:10]
d[1:10]
d[d%%=1]
d[d%%==1]
d[d%%2==1]
d[d%%3==0]
d.20<-d[1:20]
d.20
d.20[!d.20[5]]
d.20[d.20[5]]
d.20[5]
d.20[d.20!=5]
d.20[d.20!=d.20[5]]
d.20[d.20!=d.20[5] & d.20!=d.20[7] & d.20!=d.20[9]]
absent<-c(10,8,14,15,9,10,15,12,9,7,8,7)
names(absent)<-c('JAN','FEB','MAR','APR','MAY','JUN','JUL'
'AUG','SEP','OCT','NOV','DEC')
names(absent)<-c('JAN','FEB','MAR','APR','MAY','JUN','JUL',
'AUG','SEP','OCT','NOV','DEC')
absent
absent(MAY)
absent["MAY"]
absent[c("MAY","SEP")]
sum(absent[1:6])
sum(absent[7:12])
d1<-1:50
d2<-51:100
length(d1)
d1+d2
d2/d1
sum(d1)
sum(c(d1,d2))
sum(d1)
sum(d2)
sum((d1,d2))
sum(d1,d2)
mean(d1)
mean(d2)
mean(d2)-mean(d1)
sort(d1,decreasing = TRUE)
sort(d1[1:10],decreasing = TRUE)
d1_1 <- sort(d1[1:10],decreasing = TRUE)
d1_1
d2_1<-sort(d2[1:10],decreasing = TRUE)
d3<-c(d1_1,d2_1)
d3
v1<-51:90 #10번
v1[v1<60]
length(v1[v1<70])
sum(v1[65>])
sum(v1[65>v1])
v1[v1>60 & v1<73]
v1[v1%%7==3]
v1[v1%%7==0]=0
v1<-v1[v1%%7==0]<-0
v1
v1
v1<-51:90 #10번
v2<-v1[v1%%7==0]
v2
v1
v1<-v1[v1==v2==0]
v1<-v1[v1==v2=0]
v1<-v1[(v1==v2)=0]
v1<-v1[v1==v2]=0
v1[v1==v2]=0
v1
v2
v1c([v1==v2]=0)
v1c(v1[v1==v2]=0)
v1<-c(v1[v1==v2]=0)
v1[v1==v2]=0
v1
v1[v2]=0
v1
v1<-v1[v2]=0
v1[v2==v1]=0
v1[v1%%7==0]<-0
v1
v1<-51:90 #10번
v1[v1%%7==0]<-0
v1
v1<-51:90 #10번
sum(v1[v1%%2==0])
v1[v1%%2==1 | v1>80]
v1
v1[v1%%(3*5)==0]
v1[v1%%2==0]*2
v1[!10]
v1[!=10]
v1[v1!=v1%%7==0]
v1[!v1%%7==0]
#11
people<-c('Bill','20','M',"TRUE",c(Mon,Wed))
#11
people<-c('Bill','20','M',"TRUE",c('Mon','Wed'))
names(people)<-c('name','age','gender','student','day')
people
names(people)<-c('name','age','gender','student','day','day')
people
#12
a<-c('Korea','Japan','Chian','Korea','India','China','Korea')
a.new<-factor(a)
a.new
a.new[4]
a.new[4]
levels(a.new)
#12
a<-c('Korea','Japan','China','Korea','India','China','Korea')
a.new<-factor(a)
a.new
a.new[4]
levels(a.new)
as.integer(a.new)
ds<-c(90,85,70,84)
my.info <- list(name="Tom", age=60,status=TURE,score =ds)
my.info <- list(name="Tom", age=60, status=TRUE,score =ds)
my.info[1]
my.info[[1]]
my.info$score
my.info[[3]]
my.info$status
my.info$score[1]
a<-4
b<-5
c<-a+b
c
vc.1<-c(95,86,47,55,68)
vc.1
z
z<-matrix(1:30,nrow = 5,ncol = 6)
z
z<-matrix(101:200,nrow = 10,ncol=10)
z
z<-matrix(101:200,nrow = 10,ncol=10,byrow = T)
z
x<-1:5
y<-8:12
sum.xy=cbind(x,y)
sum.xy
x<-1:6
sum.xy=cbind(x,y)
x<-1:5
sum.xy
sum.xy1 = rbind(x,y)
sum.xy1
n1<-1:5
n2<-101:105
n3<-201:205
sum.n1n2n3<-cbind(x,y,z)
sum.n1n2n3
sum.n1n2n3
sum.n1n2n3<-cbind(n1,n2,n3)
sum.n1n2n3
z<=matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z
z<=matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z
names(z)<-c('v1','v2','v3')
z
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z
rownames(z)<-c('v1','v2','v3')
z
z[2,4]
z[3,2]
z[,2]
z[!2]
z[!2,]
z[c(1,3),]
z[-1,]
z[,-2]
z[,-C(2,4)]
z[,C(2,4)]
z[,C(2,4)]
z[,C(2,3)]
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z
z[,C(2,3)]
z[ ,C(2,3)]
z[c(1,3),]
z[,C(2,3)]
z[,C(2,3)]
z
z[,C(2,3)]
z[,2]
z
z[c(1,2),]
z[,c(1,2)]
z[,c(3,4)]
z[,c(2,4)]
z[,C(2,3)]
z[,c(2,3)]
score<-matrix(c(90,85,69,78,85,96,49,95,90,80,70,60),nrow = 4,ncol = 3)
score
rownames(score)<-c('John','Tom','Mark')
rownames(score)<-c('John','Tom','Mark','Jane')
colnames(score)<-c('Eng','Math','Science')
score
score["Jane","Eng"]
score["Tom"]
score["Tom",]
score[,"math"]
score[,"Math"]
mean(score[,"Math"])
#학생의 이름은
rownames(score)
row.names(score)[2]
rownames(score)[2] #"TOM"
colnames(score)[3]
v1
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
z
z<-c(1:7,2)
z
z<-matrix(12:1,nrow = 3,ncol = 4,byrow = T)
colnames(z)<-c('a1','a2','a3','a4')
z
rownames(z)<-c('v1','v2','v3')
z
z[1:7]
z[7:1]
z[7:1,byrow=T]
z[7:1]
a[seq(1,7,2)]
a
a<-c(1:7)
a[seq(1,7,2)]
a<-a[seq(1,7,2)]
a
rbind(z,a)
z<-rbind(z,a)
z
z[4,]
z[2:4,c('a1','a3')]
rownames(z)[3]
city <- c('서울','도쿄','워싱턴')
rank <- c(1,2,3)
city.info<-data.frame(city,rank,etc)
city.info
etc<-c(TRUE,TRUE,FALSE)
city.info<-data.frame(city,rank,etc)
city.info
iris
head(iris)
dim(iris)
dim(iris)
dim(iris)
str(iris)
unique(iris[,s])
unique(iris[,5])
dim(iris)
str(iris)
unique(iris[,5]) #중복제거
table(iris[,"Species"]) #품종별로 갯수 세기
colSums(iris[ ,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,!"Species"])
rowMeans(iris[,"Species"])
state.x77
st<-state.x77
st
st
col.names(st)
colnames(st)
st
colnames(st)
rownames(st)
length(colname(st))
length(colnames(st))
length(rownames(st))
str(state.x77)
rowSums(st)
colMeans(st)
rowMeans(st)
colSums(st)
st["Florida", ]
st[,"Income"]
st["Texas","Area"]
st["Ohio",c("Population","Income")]
st[,"Population">5000]
st[,"Population">"5000"]
st[,st[1]>5000]
st[,st[2]]
st[1]
st[,1]
st[st[,1]>5000]
st[,"Population"]
st[,"Population"]>5000
t<-st[,"Population"]>5000
t
st[[,"Population"]>5000]
subset(st,Population>5000)
subset(st,"Population">5000)
subset(st,Population>5000)
r1<-subset(st,Population>5000)
r1<-subset(st,"Population">5000)
r1<-subset(st,"Population">5000)
r1
subset(st,Population>5000)
st
subset(st,Income>4500)
subset(st,Income>4500)
subset(st,"Income">4500)
subset(st,"Income">=4500)
subset(st,income>=4500)
subset(st,Income >=4500)
subset(st,"Income">=4500)
subset(st,"Income">="4500")
subset(st,Income>="4500")
subset(st,Population >=5000)
st
subset(st,Population >=5000)
st<-state.x77
subset(st,Population >=5000)
subset(st,Population >=5000)
st<-state.x77
st
state.x77
st<-state.x77
st
subset(st,Population >=5000)
subset(st,Population>=5000)
state.x77
st<-state.x77
st
colnames(st)
subset(st,Population>=5000)
subset(st, 'Population'>=5000)
subset(st, Population>=5000)
st
state.x77
st<-state.x77
st
subset(st, Population>=5000)
st_1<-state.x77
st_1
subset(st_1, Population>=5000)
st_1 <- data.frame(state.x77)
subset(st_1, Population>=5000)
subset(st_1, Income >=4500)
st<-state.x77
st
st <- data.frame(state.x77)
subset(st, Population>=5000)
subset(st, Income >=4500)
st[c("Population","Income","Area"]
c("Population","Income","Area")
st[c("Population","Income","Area"),]
st[,c("Population","Income","Area")]
subset(st[,c("Population","Income","Area")], Income >=4500)
length(subset(st, Income>=4500))
subset(st, Area>=100000 & Frost>=120)
subset(st, Population<20000 & Murder<12)
subset(Means(st["Income"]), Illiteracy>=2.0)
subset(st["Income"], Illiteracy>=2.0)
subset(st["Income"], Illiteracy>=2.0)
subset(st, Illiteracy>=2.0)
means(subset(st, Illiteracy>=2.0)[,"Income"])
Means(subset(st, Illiteracy>=2.0)[,"Income"])
Mean(subset(st, Illiteracy>=2.0)[,"Income"])
mean(subset(st, Illiteracy>=2.0)[,"Income"])
mean(subset(st, Illiteracy<=2.0)[,"Income"])
subset(st, Life.Exp == Max(st[,'Life.Exp']))
subset(st, Life.Exp == max(st[,'Life.Exp']))
st['Pennsylvania','Income']
subset[st,Income>=st['Pennsylvania','Income']]
subset[st,Income>=st['Pennsylvania','Income']]
st <- data.frame(state.x77)
subset[st,Income>=st['Pennsylvania','Income']]
st
subset(st,Income>=st['Pennsylvania','Income'])
rownames(subset(st,Income>=st['Pennsylvania','Income']))
a<- matrix(1:20,4,5)
b<- matrix(21:40,4,5)
2*a
b-5
a*b
class(iris)
class(state.x77)
class(island)
class(islands)
class(lh)
is.matrix(iris)
is.data.frame(iris)
st<-data.frame(state.x77)
class(st)
as.iM<-as.matrix(iris)
class(as.iM)
as.iM
iris[,5]
state.x77[,5]
state.x77[,8]
iris['pecies']
iris[,'pecies']
iris[,'Species']
state.x77["Area"]
state.x77[Area]
state.x77[,"Area"]
rank <- c(1,2,3)
city.info<-data.frame(city,rank,etc)
city.info
age<-c(20,23,26)
gender<-c("M","F","M")
height<-c(180,160,175)
student<-c(TRUE,TRUE,FALSE)
name<-c("Tom",'Jane',"Nick")
human<-data.frame(name,age,gender,height,student)
human
list("Mary",24,"F",155,TRUE)
add <- list("Mary",24,"F",155,TRUE)
add
add
add<-list("Mary",24,"F",155,TRUE)
add
print(add)
rbind(human,add)
human<-rbind(human,add)
colnames(human)
mean(human[c('age','height')])
human('age','height')
human['age','height']
human['age']
human[c('age','height')]
human[c('age','height')]
mean(human['age'])
mean(human[1])
mean(human[,'age'])
mean(human[,c('age','height')])
mean(human[,'height'])
human[,-4]
length(human['gender'])
length(human[,'gender'])
human[,'gender']
colnames(human[,-4])
table(human$gender)
setwd("D:\ai\r_ppt\r_ppt")
setwd("D:/ai/study/r_study")
air<-read.csv('airquality.csv')
air
air3<-read.csv(file.choose())
iris<-setosa <- subset(iris,Species=='setosa')
iris.setosa <- subset(iris,Species=='setosa')
iris.setosa
write.csv(iris.setosa,'irisfilename.csv')
